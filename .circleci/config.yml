#####################
# COMMON DEFINITIONS
#####################
executors:
  go:
    docker:
      - image: circleci/golang:1.14.0
    working_directory: ~/circleci-demo-monorepo

parameters:
  gatekeeper:
    type: boolean
    default: true
  service:
    type: boolean
    default: false
  service-name:
    type: string
    default: ""

############
# WORKFLOWS
############
workflows:
  version: 2.1
  gatekeeper:
    when: << pipeline.parameters.gatekeeper >>
    jobs:
      - gatekeeper
  
  service:
    when: << pipeline.parameters.service >>
    jobs:
      - build-service:
          directory: << pipeline.parameters.service-name >>

##################
# JOB DEFINITIONS
##################
version: 2.1
jobs:
  gatekeeper:
    executor: go
    steps:
      - run: echo "Hello World!"

  build-service:
    parameters:
      directory:
        type: string
    executor: go
    steps:
      - checkout
      - restore_cache:
          keys:
            - gomod-cache-v1-{{ checksum "<< parameters.directory >>/go.sum" }}
      - run:
          name: Install dependencies
          command: go mod download
      - run:
          name: Install golint
          command: go get -u golang.org/x/lint/golint
      - save_cache:
          key: gomod-cache-v1-{{ checksum "<< parameters.directory >>/go.sum" }}
          paths:
            - ~/go/pkg/mod
      - run: 
          name: Check code formatting 
          command: |
            files=$(go fmt)
            if [[ $? != 0 ]]; then \
              echo "go fmt ran into an error. Exiting" && exit 1; \
            elif [[ $files ]]; then \
              echo "go fmt found formatting errors in the follow files: $files" && exit 1; \
            else \
              echo "PASS: no formatting issues found"; \
            fi
          working_directory: << parameters.directory >>

